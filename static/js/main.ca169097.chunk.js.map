{"version":3,"sources":["assets/nutriNavLogo.svg","components/Nav.js","components/FavouriteCard.js","components/FavouriteResults.js","pages/Favourites.js","pages/FoodDetail.js","components/ComparisonCard.js","pages/Compare.js","components/FoodCard.js","components/FoodResults.js","pages/Home.js","components/Toaster.js","firebaseConfig.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Nav","className","title","aria-label","activeClassName","to","exact","onClick","this","props","resetFilter","icon","faHome","faHeart","src","logo","alt","faSearch","faExchangeAlt","Component","FavouriteCard","id","foodItem","encodeURI","type","brand","imgURL","name","removeItem","key","faTimes","FavouriteResults","foodItems","map","index","Favourites","state","term","htmlFor","placeholder","onKeyUp","e","updateFilterString","target","value","savedFoods","FoodDetail","removeFocus","blur","food","foodType","isReady","getDetails","then","response","foodDetail","data","foods","completedNutrients","completeFoodNutrients","completedFood","completeFood","setState","serving","servingUnit","servingWeight","addToSaved","parentNode","secondaryNutrients","other","unit","mainNutrients","nutrient","faSpinner","ComparisonCard","secondNutrient","Compare","userCompared","FoodCard","nix_item_id","food_name","photo","thumb","brand_name","FoodResults","typeCheck","hasUserTyped","length","Home","onChange","userSearch","foodTypeButtonClick","Toaster","theme","SUCCESS","overall","message","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","creds","App","getAllSaved","database","ref","on","savedFromDB","val","arraySaved","push","completeSaved","runToaster","duration","toaster","hidden","killToaster","setTimeout","max","maxCompared","maxFavourites","isNotDuplicate","userFavourites","filter","child","remove","getNutrients","nutrientsAPI","axios","url","method","responseType","headers","tempNutrients","targetNutrients","getNutrientID","nutrients","tempNutrient","usda_nutr_desc","includes","attr_id","getValue","foodNutrients","othersToArray","others","otherNutrients","highres","Math","round","serving_qty","serving_unit","serving_weight_grams","Calories","nf_calories","Carbs","nf_total_carbohydrate","Sodium","nf_sodium","Sugar","nf_sugars","Protein","nf_protein","Fat","nf_total_fat","nf_saturated_fat","Fiber","nf_dietary_fiber","secondary","full_nutrients","urlEndpoint","params","query","fetchFood","res","brandedFood","branded","commonFood","common","randomSearch","randomArray","randomInteger","floor","random","string","filteredData","toLowerCase","userFavouritesFilt","filterString","basename","path","render","match","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.ca169097.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/nutriNavLogo.dbd12579.svg\";","import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n\tfaExchangeAlt,\n\tfaHome,\n\tfaHeart,\n\tfaSearch\n} from '@fortawesome/free-solid-svg-icons';\nimport { NavLink } from 'react-router-dom';\n\nimport logo from '../assets/nutriNavLogo.svg';\n\nclass Nav extends Component {\n\trender() {\n\t\treturn (\n      <div className=\"navigation\">\n        <div className=\"wrapper\">\n          <nav>\n            <ul className=\"navContainer\">\n              <div className=\"navList\">\n                <li\n                  className=\"navItem\"\n                  title=\"Go to Homepage\"\n                  aria-label=\"Go to Homepage\"\n                >\n                  <NavLink\n                    activeClassName=\"activeNav\"\n                    to=\"/\"\n                    exact\n                    onClick={this.props.resetFilter}\n                  >\n                    <FontAwesomeIcon icon={faHome} />\n                  </NavLink>\n                </li>\n                <li\n                  className=\"navItem\"\n                  title=\"Go to Favourited Items Page\"\n                  aria-label=\"Go to Favourited Items Page\"\n                >\n                  <NavLink\n                    activeClassName=\"activeNav\"\n                    to=\"/favourites\"\n                    onClick={this.props.resetFilter}\n                  >\n                    <FontAwesomeIcon icon={faHeart} />\n                  </NavLink>\n                </li>\n              </div>\n              <div className=\"navList\">\n                <li\n                  className=\"navLogo\"\n                  title=\"Go to Homepage\"\n                  aria-label=\"Go to Homepage\"\n                >\n                  <NavLink\n                    activeClassName=\"activeNav\"\n                    to=\"/\"\n                    exact\n                    onClick={this.props.resetFilter}\n                  >\n                    <img src={logo} alt=\"\" />\n                  </NavLink>\n                </li>\n              </div>\n\n              <div className=\"navList\">\n                <li\n                  className=\"nav-icon navItem\"\n                  title=\"Go to Search Page\"\n                  aria-label=\"Go to Search Page\"\n                >\n                  <NavLink\n                    activeClassName=\"activeNav\"\n                    to=\"/\"\n                    exact\n                    onClick={this.props.resetFilter}\n                  >\n                    <FontAwesomeIcon icon={faSearch} />\n                  </NavLink>\n                </li>\n                <li\n                  className=\"nav-icon navItem\"\n                  title=\"Go to Food Comparing Page\"\n                  aria-label=\"Go to Food Comparing Page\"\n                >\n                  <NavLink\n                    activeClassName=\"activeNav\"\n                    to=\"/compare\"\n                    onClick={this.props.resetFilter}\n                  >\n                    {\" \"}\n                    <FontAwesomeIcon icon={faExchangeAlt} />\n                  </NavLink>\n                </li>\n              </div>\n            </ul>\n          </nav>\n        </div>\n      </div>\n    );\n\t}\n}\n\nexport default Nav;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faTimes\n} from '@fortawesome/free-solid-svg-icons';\n\nclass FavouriteCard extends Component {\n  render() {\n    let id = this.props.foodItem.id\n    id=encodeURI(id)\n    const type = this.props.foodItem.brand ? \"branded\" : \"common\";\n    return (\n      <div className=\"foodCard favourite\">\n          \n          <Link className=\"favouriteCardLink\" to={`/food/${type}/${id}`}>\n            <div className=\"favCard\">\n\n              <div className=\"cardImage\">\n                <img src={this.props.foodItem.imgURL} alt={this.props.foodItem.name} />\n              </div>\n\n              <div className=\"cardContent\">\n                <h2 className=\"cardTitle\">{this.props.foodItem.brand ? this.props.foodItem.brand : this.props.foodItem.name}</h2>\n                {this.props.foodItem.brand ? <h3 className=\"cardSubtitle\">{this.props.foodItem.name}</h3> : null}\n                \n              </div>\n            </div>\n          </Link>\n        <button\n          title=\"Click to Remove\"\n          aria-label=\"Click to Remove from Favourites\"\n          onClick={() => {\n            this.props.removeItem(this.props.foodItem.key, \"userFavourites\");\n          }}\n        >\n          <FontAwesomeIcon className=\"deleteIcon\" icon={faTimes} />\n        </button >\n        </div>\n    );\n  }\n}\n\nexport default FavouriteCard;\n","import React, { Component } from \"react\";\nimport FavouriteCard from \"./FavouriteCard\";\n\nclass FavouriteResults extends Component {\n  componentDidMount() {}\n\n  render() {\n    return (\n      <div className=\"foodContainer\">\n        {this.props.foodItems.map((foodItem, index) => (\n          <FavouriteCard removeItem={this.props.removeItem} key={index} foodItem={foodItem} />\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default FavouriteResults;\n","import React, { Component } from \"react\";\nimport Nav from \"../components/Nav\";\nimport FavouriteResults from \"../components/FavouriteResults\";\n\nclass Favourites extends Component {\n  constructor() {\n    super();\n    this.state = {\n      term: \"\"\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"favourites\">\n        <Nav resetFilter={this.props.resetFilter}/>\n        <div className=\"pageContainer\">\n          <div className=\"wrapper\">\n            <h1 className=\"pageTitle\">Saved Items</h1>\n            <div className=\"pageFilter\">\n              <label htmlFor=\"filter\"></label>\n              <input\n                type=\"text\"\n                id=\"filter\"\n                placeholder=\"Filter by Name\"\n                onKeyUp={(e) => {\n                  this.props.updateFilterString(e.target.value);\n                }}\n              ></input>\n            </div>\n            <FavouriteResults\n              foodItems={this.props.savedFoods}\n              removeItem={this.props.removeItem}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Favourites;\n","import React, { Component } from 'react';\nimport { faExchangeAlt, faHeart, faSpinner } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport Nav from '../components/Nav';\n\nclass FoodDetail extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tfood: {},\n\t\t\tfoodType: this.props.type,\n\t\t\tisReady: false\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.props.getDetails(this.props.id, this.props.type).then(response => {\n\t\t\tconst foodDetail = response.data.foods[0];\n\t\t\tconst completedNutrients = this.props.completeFoodNutrients(foodDetail);\n\t\t\tconst completedFood = this.props.completeFood(\n\t\t\t\tfoodDetail,\n\t\t\t\tcompletedNutrients\n\t\t\t);\n\t\t\tthis.setState(\n\t\t\t\t{\n\t\t\t\t\tfood: completedFood\n\t\t\t\t},\n\t\t\t\t() => {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tisReady: true\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t);\n\t\t}); // end of .then()\n\t}\n\n\tremoveFocus = e => {\n\t\te.target.blur();\n\t};\n\n\trender() {\n\t\treturn this.state.isReady ? (\n      <div className=\"detailPage\">\n        <Nav resetFilter={this.props.resetFilter} />\n\n        <div className=\"detailContainer\">\n          <div className=\"wrapper\">\n            <div className=\"detailContent\">\n              <div className=\"detailIntro\">\n                <div className=\"introLeft\">\n                  <div className=\"detailImg\">\n                    <img\n                      src={this.state.food.imgURL}\n                      alt={this.state.food.name}\n                    ></img>\n                  </div>\n                  <div className=\"detailDesc\">\n                    <div className=\"detailTitle\">\n                      <h1> {this.state.food.name}</h1>\n                    </div>\n\n                    <div className=\"detailDescription\">\n                      <h2>Description</h2>\n                      <ul>\n                        <li>\n                          <p>\n                            <span className=\"nutrientName\">Serving:</span>{\" \"}\n                            {this.state.food.serving}{\" \"}\n                            {this.state.food.servingUnit} (\n                            {this.state.food.servingWeight}\n                            g){\" \"}\n                          </p>\n                        </li>\n\n                        {this.state.food.brand ? (\n                          <li>\n                            <p>Brand: {this.state.food.brand}</p>\n                          </li>\n                        ) : (\n                          \"\"\n                        )}\n                      </ul>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"introRight\">\n                  <div className=\"detailButtons\">\n                    <button\n                      title=\"Add to Favourites\"\n\t\t\t\t\t\t\t\t\t\t\taria-label=\"Add to Favourites\"\n\t\t\t\t\t\t\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\t\t\t\t\t\t\tthis.props.addToSaved(this.state.food,'userFavourites');\n\t\t\t\t\t\t\t\t\t\t\t\te.target.parentNode.blur()\n\t\t\t\t\t\t\t\t\t\t\t}}\n                    >\n                      <FontAwesomeIcon\n                        icon={faHeart}\n                      />\n                    </button>\n                    <button\n                      title=\"Add to Compare\"\n\t\t\t\t\t\t\t\t\t\t\taria-label=\"Add to Compare\"\n\t\t\t\t\t\t\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\t\t\t\t\t\t\tthis.props.addToSaved(this.state.food, 'userCompared');\n\t\t\t\t\t\t\t\t\t\t\t\te.target.parentNode.blur()\n\t\t\t\t\t\t\t\t\t\t\t}}\n                    >\n                      <FontAwesomeIcon\n                        icon={faExchangeAlt}\n                      />\n                    </button>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"detailNutrition\">\n                <h2>Nutritional Facts</h2>\n                <div className=\"detailNutritionFacts\">\n                  <ul className=\"nutrientList\">\n                    {this.state.food.secondaryNutrients.map(other => {\n                      return (\n                        <li key={other.name}>\n                          <div className=\"nutrient\">\n                            <div className=\"nutrientName\">\n                              <p>{other.name}</p>\n                            </div>\n                            <div className=\"nutrientUnit\">\n                              <p>\n                                {other.value} {other.unit}\n                              </p>\n                            </div>\n                          </div>\n                        </li>\n                      );\n                    })}\n                  </ul>\n\n                  <ul className=\"nutrientList\">\n                    {this.state.food.mainNutrients.map(nutrient => {\n                      return (\n                        <li key={nutrient.name}>\n                          <div className=\"nutrient\">\n                            <div className=\"nutrientName\">\n                              <p>{nutrient.name}</p>\n                            </div>\n                            <div className=\"nutrientUnit\">\n                              <p>\n                                {nutrient.value} {nutrient.unit}\n                              </p>\n                            </div>\n                          </div>\n                        </li>\n                      );\n                    })}\n                  </ul>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    ) : (\n      <div className=\"detailPage\">\n        <Nav />\n        <div className=\"detailContainer\">\n          <div className=\"wrapper\">\n            <div className=\"spinner\">\n              <FontAwesomeIcon icon={faSpinner} />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n\t}\n}\nexport default FoodDetail;\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n\tfaTimes\n} from '@fortawesome/free-solid-svg-icons';\n\nfunction ComparisonCard(props) {\n\treturn (\n\t\t<div className=\"comparisonCard\">\n\t\t\t<div className=\"imageContainer\">\n\t\t\t\t<img src={props.food.imgURL} alt={props.food.name} />\n\t\t\t</div>\n\t\t\t<h3>{props.food.name}</h3>\n\t\t\t<h4>Nutritional Facts</h4>\n\t\t\t<ul>\n\t\t\t\t{props.food.secondaryNutrients.map(secondNutrient => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<li key={secondNutrient.name}>\n\t\t\t\t\t\t\t<div className=\"nutrient\">\n\t\t\t\t\t\t\t\t<div className=\"nutrientName\">{secondNutrient.name}</div>\n\t\t\t\t\t\t\t\t<div className=\"nutrientUnit\">\n\t\t\t\t\t\t\t\t\t{secondNutrient.value} {secondNutrient.unit}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</ul>\n\n\t\t\t<h4>Vitamins and Minerals</h4>\n\t\t\t<ul>\n\t\t\t\t{props.food.mainNutrients.map(nutrient => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<li key={nutrient.id}>\n\t\t\t\t\t\t\t<div className=\"nutrient\">\n\t\t\t\t\t\t\t\t<div className=\"nutrientName\">{nutrient.name}</div>\n\t\t\t\t\t\t\t\t<div className=\"nutrientUnit\">\n\t\t\t\t\t\t\t\t\t{nutrient.value} {nutrient.unit}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</ul>\n\t\t\t<button\n\t\t\t\ttitle=\"Click to remove\"\n\t\t\t\taria-label=\"Click to remove from Item Comparison\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\tprops.removeItem(props.id, 'userCompared');\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<FontAwesomeIcon className=\"deleteIcon\" icon={faTimes} />\n\t\t\t</button>\n\t\t</div>\n\t);\n}\n\nexport default ComparisonCard;\n","import React, { Component } from 'react';\nimport Nav from '../components/Nav';\nimport ComparisonCard from '../components/ComparisonCard';\n\nclass Compare extends Component {\n\n\trender() {\n\t\treturn (\n      <div className=\"comparisonPage\">\n        <Nav resetFilter={this.props.resetFilter} />\n        <h1 className=\"pageTitle\">Compare Items</h1>\n        <div className=\"wrapper\">\n          <div className=\"comparisonContainer\">\n            {this.props.userCompared.map(food => {\n              return (\n                <ComparisonCard\n                  key={food.key}\n                  id={food.key}\n                  food={food}\n                  removeItem={this.props.removeItem}\n                />\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    );\n\t}\n}\n\nexport default Compare;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass FoodCard extends Component {\n\trender() {\n\t\tlet id = this.props.foodItem.nix_item_id\n\t\t\t? this.props.foodItem.nix_item_id\n\t\t\t: this.props.foodItem.food_name;\n\t\tid = encodeURI(id);\n\t\tconst type = this.props.foodItem.nix_item_id\n\t\t\t? \"branded\" : \"common\"\n\n\t\treturn (\n\t\t\t\n\t\t\t<Link className=\"foodCardLink\" to={`/food/${type}/${id}`}>\n\t\t\t\t<div className=\"foodCard\" title=\"Click for details\">\n\t\t\t\t\t<div className=\"cardImage\">\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\tsrc={this.props.foodItem.photo.thumb}\n\t\t\t\t\t\t\talt={this.props.foodItem.food_name}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"cardContent\">\n\t\t\t\t\t\t<h2 className=\"cardTitle\">\n\t\t\t\t\t\t\t{this.props.foodItem.nix_item_id\n\t\t\t\t\t\t\t\t? this.props.foodItem.brand_name\n\t\t\t\t\t\t\t\t: this.props.foodItem.food_name}\n\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t{this.props.foodItem.nix_item_id ? (\n\t\t\t\t\t\t\t<h3 className=\"cardSubtitle\">{this.props.foodItem.food_name}</h3>\n\t\t\t\t\t\t) : null}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Link>\n\t\t);\n\t}\n}\n\nexport default FoodCard;\n","import React, { Component } from 'react';\nimport FoodCard from './FoodCard';\n\nclass FoodResults extends Component {\n\tcomponentDidMount() {}\n\n\ttypeCheck = () => {\n\t\tif (this.props.hasUserTyped === false && this.props.foodItems.length === 0) {\n\t\t\treturn false\n\t\t} else if (this.props.hasUserTyped === true && this.props.foodItems.length===0) {\n\t\t\treturn true\n\t\t} else {\n\t\t\treturn false\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"foodContainer\">\n\t\t\t\t{this.typeCheck() ? (\n\t\t\t\t\t<div className=\"noResults\">\n\t\t\t\t\t\t<img src=\"https://i.imgur.com/S81lkaK.png\" alt=\"\" />\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tSorry! We didn't find anything. Please try another search term.\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\t\t\t\t) : (\n\t\t\t\t\tthis.props.foodItems.map((foodItem, index) => (\n\t\t\t\t\t\t<FoodCard key={index} foodItem={foodItem} />\n\t\t\t\t\t))\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default FoodResults;\n","import React, { Component } from 'react';\nimport Nav from '../components/Nav';\nimport FoodResults from '../components/FoodResults';\n\nclass Home extends Component {\n\trender() {\n\t\treturn (\n      <div className=\"home\">\n        <Nav resetFilter={this.props.resetFilter} />\n        <div className=\"pageContainer\">\n          <div className=\"wrapper\">\n            <div className=\"searchBar\">\n              <div className=\"input\">\n                <input\n                  type=\"search\"\n                  name=\"search\"\n                  id=\"search\"\n                  onChange={this.props.userSearch}\n                  placeholder=\"Search for Food\"\n                />\n              </div>\n\n              <div className=\"toggleBtns\">\n                <button\n                  className={\n                    this.props.type === \"common\"\n                      ? \"toggle toggleCommon toggleActive\"\n                      : \"toggle toggleCommon\"\n                  }\n                  id=\"common\"\n                  onClick={this.props.foodTypeButtonClick}\n                >\n                  Common\n                </button>\n                <button\n                  className={\n                    this.props.type === \"branded\"\n                      ? \"toggle toggleBranded toggleActive\"\n                      : \"toggle toggleBranded\"\n                  }\n                  id=\"branded\"\n                  onClick={this.props.foodTypeButtonClick}\n                >\n                  Branded\n                </button>\n              </div>\n            </div>\n\n            <FoodResults foodItems={this.props.foodItems} hasUserTyped={this.props.hasUserTyped}/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Home;\n","import React, { Component } from 'react';\n\nclass Toaster extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\ttheme: {\n\t\t\t\tSUCCESS: 'success',\n\t\t\t\t'SAVE FAILED': 'failed'\n\t\t\t}\n\t\t};\n\t}\n\n  render() {\n    const theme = this.state.theme[this.props.overall];\n    return (\n      <div className={\"toasterBox \"}>\n        <div className={\"toaster \" + theme}>\n          <h1>{this.props.overall}</h1>\n          <p> {this.props.message}</p>\n        </div>\n      </div>\n    );\n  }\n}\nexport default Toaster;\n","import firebase from 'firebase';\n\n\n var firebaseConfig = {\n   apiKey: \"AIzaSyCdy_v8Of--vsc5yPhbKDECOOHl3nlHIfo\",\n   authDomain: \"nutrinav-97224.firebaseapp.com\",\n   databaseURL: \"https://nutrinav-97224.firebaseio.com\",\n   projectId: \"nutrinav-97224\",\n   storageBucket: \"nutrinav-97224.appspot.com\",\n   messagingSenderId: \"37824965367\",\n   appId: \"1:37824965367:web:9c87ff57c94915ec9c01f2\"\n };\n\n firebase.initializeApp(firebaseConfig);\n\n export default firebase;","import React, { Component } from 'react';\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport axios from 'axios';\nimport Favourites from './pages/Favourites';\nimport FoodDetail from './pages/FoodDetail';\nimport Compare from './pages/Compare';\nimport Home from './pages/Home';\nimport Toaster from './components/Toaster';\nimport firebase from './firebaseConfig';\nimport './App.css';\n// import creds from \"./apiKey\";\n\nconst creds = {\n\tkey: '4bc7d853f1893981ecf31d72f7121e3d',\n\tid: '661861c1'\n};\n\nclass App extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\t// target nutrients from the Client Brief (initially without ids)\n\t\t\ttargetNutrients: [\n\t\t\t\t{ name: 'Vitamin A', unit: 'IU' },\n\t\t\t\t{ name: 'Vitamin D', unit: 'IU' },\n\t\t\t\t{ name: 'Vitamin B-6', unit: 'mg' },\n\t\t\t\t{ name: 'Vitamin C', unit: 'mg' },\n\t\t\t\t{ name: 'Vitamin E', unit: 'mg' },\n\t\t\t\t{ name: 'Magnesium', unit: 'mg' },\n\t\t\t\t{ name: 'Zinc', unit: 'mg' },\n\t\t\t\t{ name: 'Iron', unit: 'mg' }\n\t\t\t],\n\t\t\tcommonFood: [],\n\t\t\tbrandedFood: [],\n\t\t\tnutrients: [], // target nutrients with ids\n\t\t\tuserFavourites: [],\n\t\t\tuserFavouritesFilt: [],\n\t\t\tfilterString: '',\n\t\t\tuserCompared: [],\n\t\t\ttype: 'common',\n\t\t\tmaxCompared: 3,\n\t\t\tmaxFavourites: 18,\n\t\t\ttoaster: {\n\t\t\t\thidden: true\n\t\t\t},\n\t\t\thasUserTyped: false\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.getNutrients(); // get nutrients from API in raw state\n\t\tthis.randomSearch();\n\t\tthis.getAllSaved('userCompared');\n\t\tthis.getAllSaved('userFavourites');\n\t}\n\n\t// listens for changes to firebase and updates state\n\tgetAllSaved = state => {\n\t\tconst dbRef = firebase.database().ref(`${state}`);\n\t\tdbRef.on('value', response => {\n\t\t\tconst savedFromDB = response.val();\n\t\t\tconst arraySaved = [];\n\t\t\tfor (let key in savedFromDB) {\n\t\t\t\tarraySaved.push({\n\t\t\t\t\tkey: key,\n\t\t\t\t\tid: savedFromDB[key].id,\n\t\t\t\t\tname: savedFromDB[key].name,\n\t\t\t\t\tbrand: savedFromDB[key].brand,\n\t\t\t\t\tserving: savedFromDB[key].serving,\n\t\t\t\t\tservingUnit: savedFromDB[key].servingUnit,\n\t\t\t\t\tservingWeight: savedFromDB[key].servingWeight,\n\t\t\t\t\timgURL: savedFromDB[key].imgURL,\n\t\t\t\t\tmainNutrients: savedFromDB[key].mainNutrients,\n\t\t\t\t\tsecondaryNutrients: savedFromDB[key].secondaryNutrients\n\t\t\t\t});\n\t\t\t}\n\t\t\tthis.completeSaved(arraySaved, state);\n\t\t});\n\t};\n\t// saves the incoming firebase data to state\n\tcompleteSaved = (data, state) => {\n\t\tthis.setState({\n\t\t\t[state]: data,\n\t\t\t[state + `Filt`]: data\n\t\t});\n\t};\n\n\t// adds a toaster to the UI\n\trunToaster = ({ overall, message, duration }) => {\n\t\tthis.setState(\n\t\t\t{\n\t\t\t\ttoaster: {\n\t\t\t\t\thidden: false,\n\t\t\t\t\tmessage: message,\n\t\t\t\t\toverall: overall\n\t\t\t\t}\n\t\t\t},\n\t\t\t() => this.killToaster(duration)\n\t\t);\n\t};\n\n\t// removes the toaster from the UI\n\tkillToaster = duration => {\n\t\tsetTimeout(() => {\n\t\t\tthis.setState({\n\t\t\t\ttoaster: {\n\t\t\t\t\thidden: true\n\t\t\t\t}\n\t\t\t});\n\t\t}, duration);\n\t};\n\n\t// adds a food item to saved (checks for duplicates and against max amounts)\n\taddToSaved = (food, state) => {\n\t\tconst max =\n\t\t\tstate === 'userCompared'\n\t\t\t\t? this.state.maxCompared\n\t\t\t\t: this.state.maxFavourites;\n\t\tif (this.isNotDuplicate(food.id, state) && this.state[state].length < max) {\n\t\t\tconst dBCompRef = firebase.database().ref(`${state}`);\n\t\t\tdBCompRef.push(food);\n\t\t\tthis.runToaster({\n\t\t\t\toverall: `SUCCESS`,\n\t\t\t\tmessage: `Your food (${food.name}) has been saved.`,\n\t\t\t\tduration: 2500\n\t\t\t});\n\t\t} else {\n\t\t\tthis.isNotDuplicate(food.id, state)\n\t\t\t\t? this.runToaster({\n\t\t\t\t\t\toverall: `SAVE FAILED`,\n\t\t\t\t\t\tmessage: `Unable to add. The list is full`,\n\t\t\t\t\t\tduration: 2500\n\t\t\t\t  })\n\t\t\t\t: this.runToaster({\n\t\t\t\t\t\toverall: `SAVE FAILED`,\n\t\t\t\t\t\tmessage: `This food (${food.name}) is already saved.`,\n\t\t\t\t\t\tduration: 2500\n\t\t\t\t  });\n\t\t}\n\t};\n\n\t// checks if food item already exists in saved\n\tisNotDuplicate = (id, state) => {\n\t\tconst copySaved =\n\t\t\tstate === 'userCompared'\n\t\t\t\t? [...this.state.userCompared]\n\t\t\t\t: [...this.state.userFavourites];\n\n\t\tconst result = copySaved.filter(food => {\n\t\t\treturn food.id === id;\n\t\t});\n\t\treturn result.length === 0;\n\t};\n\n\t// removes a food item from saved\n\tremoveItem = (key, state) => {\n\t\tconst dbRef = firebase.database().ref(state);\n\t\tdbRef.child(key).remove();\n\t\tthis.runToaster({\n\t\t\toverall: `SUCCESS`,\n\t\t\tmessage: `The food item has been removed.`,\n\t\t\tduration: 2500\n\t\t});\n\t};\n\n\t// retrieves the most up to date nutrients from API and their ids, maps the ids to the target nutrient list\n\tgetNutrients = () => {\n\t\tlet nutrientsAPI = [];\n\t\taxios({\n\t\t\turl: 'https://trackapi.nutritionix.com/v2/utils/nutrients',\n\t\t\tmethod: 'GET',\n\t\t\tresponseType: 'json',\n\t\t\theaders: {\n\t\t\t\t'x-app-key': creds.key,\n\t\t\t\t'x-app-id': creds.id,\n\t\t\t\t'x-remote-user-id': '0'\n\t\t\t}\n\t\t}).then(response => {\n\t\t\tnutrientsAPI = response.data;\n\t\t\t// transforms each target nutrient into an object which includes the nutrient's id\n\t\t\t// stores these objects in a temporary array\n\t\t\tconst tempNutrients = this.state.targetNutrients.map(nutrient => {\n\t\t\t\treturn {\n\t\t\t\t\tname: nutrient.name,\n\t\t\t\t\tid: this.getNutrientID(nutrient.name, nutrientsAPI),\n\t\t\t\t\tunit: nutrient.unit\n\t\t\t\t};\n\t\t\t});\n\t\t\t// updates the nutrients state with the temporary array\n\t\t\tthis.setState({\n\t\t\t\tnutrients: tempNutrients\n\t\t\t});\n\t\t});\n\t};\n\n\t// retrieves the id of a nutrient from a given nutrient list, using the name\n\tgetNutrientID = (name, nutrientsAPI) => {\n\t\tconst tempNutrient = nutrientsAPI.filter(nutrient => {\n\t\t\treturn nutrient.usda_nutr_desc.includes(name);\n\t\t});\n\t\treturn tempNutrient.length > 0 ? tempNutrient[0].attr_id : '';\n\t};\n\n\t// retrieves the amount/value of a nutrient from a given nutrient list, using the id\n\tgetValue = (id, foodNutrients) => {\n\t\tconst tempNutrient = foodNutrients.filter(nutrient => {\n\t\t\treturn nutrient.attr_id === id;\n\t\t});\n\t\treturn tempNutrient.length > 0 ? tempNutrient[0].value : 0;\n\t};\n\n\tothersToArray = others => {\n\t\tconst otherNutrients = [];\n\t\tfor (let key in others) {\n\t\t\totherNutrients.push({\n\t\t\t\tname: key,\n\t\t\t\tvalue: others[key].value,\n\t\t\t\tunit: others[key].unit\n\t\t\t});\n\t\t}\n\t\treturn otherNutrients;\n\t};\n\n\tcompleteFood = (food, nutrients) => {\n\t\tconst completedFood = {\n\t\t\tid: food.nix_item_id ? food.nix_item_id : food.food_name,\n\t\t\tname: food.food_name,\n\t\t\tbrand: food.brand_name,\n\t\t\timgURL: food.photo.highres ? food.photo.highres : food.photo.thumb,\n\t\t\tserving: Math.round(food.serving_qty),\n\t\t\tservingUnit: food.serving_unit,\n\t\t\tservingWeight: food.serving_weight_grams,\n\t\t\tmainNutrients: [...nutrients],\n\t\t\t// other non-critical nutrients mentioned in the Client Brief\n\t\t\tsecondaryNutrients: {\n\t\t\t\tCalories: { value: Math.round(food.nf_calories), unit: 'kcal' },\n\t\t\t\tCarbs: {\n\t\t\t\t\tvalue: Math.round(food.nf_total_carbohydrate),\n\t\t\t\t\tunit: 'g'\n\t\t\t\t},\n\t\t\t\tSodium: { value: Math.round(food.nf_sodium), unit: 'mg' },\n\t\t\t\tSugar: { value: Math.round(food.nf_sugars), unit: 'g' },\n\t\t\t\tProtein: { value: Math.round(food.nf_protein), unit: 'g' },\n\t\t\t\tFat: { value: Math.round(food.nf_total_fat), unit: 'g' },\n\t\t\t\t'Saturated Fat': {\n\t\t\t\t\tvalue: Math.round(food.nf_saturated_fat),\n\t\t\t\t\tunit: 'g'\n\t\t\t\t},\n\t\t\t\tFiber: {\n\t\t\t\t\tvalue: Math.round(food.nf_dietary_fiber),\n\t\t\t\t\tunit: 'g'\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tconst secondary = completedFood.secondaryNutrients;\n\t\tcompletedFood.secondaryNutrients = this.othersToArray(secondary);\n\t\treturn completedFood;\n\t};\n\n\t// receives a food item and returns its completed main nutrient list with name, value, id, and measure unit\n\tcompleteFoodNutrients = food => {\n\t\tconst completeNutrients = this.state.nutrients.map(nutrient => {\n\t\t\t// calls a function from props that maps this nutrient to its value\n\t\t\tconst value = this.getValue(nutrient.id, food.full_nutrients);\n\t\t\t// returns the completed nutrient profile as an object to exist in the completedNutrients array\n\t\t\treturn {\n\t\t\t\tname: nutrient.name,\n\t\t\t\tid: nutrient.id,\n\t\t\t\tvalue: Math.round(value),\n\t\t\t\tunit: nutrient.unit\n\t\t\t};\n\t\t});\n\t\treturn completeNutrients;\n\t};\n\n\t// gets the details about a food item from the API based on the id(nix or food_name) and type(common vs branded)\n\t// caller must resolve the promise on their own\n\tgetDetails = (id, type) => {\n\t\tconst urlEndpoint = type === 'common' ? 'natural/nutrients' : 'search/item';\n\t\tconst method = type === 'common' ? 'POST' : 'GET';\n\t\tconst params = type === 'common' ? {} : { nix_item_id: id };\n\t\tconst data = type === 'common' ? { query: id } : {};\n\t\treturn axios({\n\t\t\turl: `https://trackapi.nutritionix.com/v2/${urlEndpoint}`,\n\t\t\tmethod: method,\n\t\t\theaders: {\n\t\t\t\t'x-app-key': creds.key,\n\t\t\t\t'x-app-id': creds.id,\n\t\t\t\t'x-remote-user-id': '0',\n\t\t\t\t'content-type': 'application/json'\n\t\t\t},\n\t\t\tdata: data,\n\t\t\tparams: params\n\t\t});\n\t};\n\n\tfetchFood = query => {\n\t\taxios({\n\t\t\turl: 'https://trackapi.nutritionix.com/v2/search/instant',\n\t\t\tmethod: 'get',\n\t\t\theaders: {\n\t\t\t\t'x-app-key': creds.key,\n\t\t\t\t'x-app-id': creds.id\n\t\t\t},\n\t\t\tparams: {\n\t\t\t\tquery\n\t\t\t}\n\t\t}).then(res => {\n\t\t\tthis.setState({\n\t\t\t\tbrandedFood: res.data.branded,\n\t\t\t\tcommonFood: res.data.common,\n\t\t\t\thasUserTyped: true\n\t\t\t});\n\t\t});\n\t};\n\n\t// Function to random decide some initial search results on page load\n\trandomSearch = () => {\n\t\tconst randomArray = ['corn', 'spinach', 'burger', 'broccoli'];\n\t\tconst randomInteger = Math.floor(Math.random() * randomArray.length);\n\t\tthis.fetchFood(randomArray[randomInteger]);\n\t};\n\n\t// Function that tracks which letters the user is typing into the search bar\n\tuserSearch = e => {\n\t\tconst query = e.target.value;\n\t\tthis.fetchFood(query);\n\t};\n\n\t// Function to switch between displaying either commmon foods or branded foods to the user.\n\tfoodTypeButtonClick = e => {\n\t\tthis.setState({\n\t\t\ttype: e.target.id\n\t\t});\n\t};\n\n\t// filters favourites by received keyword\n\tupdateFilterString = string => {\n\t\tconst filteredData = this.state.userFavourites.filter(food => {\n\t\t\treturn food.name.toLowerCase().includes(string.toLowerCase());\n\t\t});\n\t\tthis.setState({\n\t\t\tuserFavouritesFilt: filteredData\n\t\t});\n\t};\n\n\t// brings the saved favourites into an unfiltered state\n\tresetFilter = () => {\n\t\tthis.setState({\n\t\t\tfilterString: '',\n\t\t\tuserFavouritesFilt: this.state.userFavourites\n\t\t});\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<Router basename=\"/\">\n\t\t\t\t<div className=\"App\">\n\t\t\t\t\t<Route\n\t\t\t\t\t\tpath=\"/\"\n\t\t\t\t\t\texact\n\t\t\t\t\t\trender={() => (\n\t\t\t\t\t\t\t<Home\n\t\t\t\t\t\t\t\tfoodItems={\n\t\t\t\t\t\t\t\t\tthis.state.type === 'branded'\n\t\t\t\t\t\t\t\t\t\t? this.state.brandedFood\n\t\t\t\t\t\t\t\t\t\t: this.state.commonFood\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tuserSearch={this.userSearch}\n\t\t\t\t\t\t\t\tfoodTypeButtonClick={this.foodTypeButtonClick}\n\t\t\t\t\t\t\t\ttype={this.state.type}\n\t\t\t\t\t\t\t\tresetFilter={this.resetFilter}\n\t\t\t\t\t\t\t\thasUserTyped={this.state.hasUserTyped}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route\n\t\t\t\t\t\tpath=\"/favourites\"\n\t\t\t\t\t\trender={() => (\n\t\t\t\t\t\t\t<Favourites\n\t\t\t\t\t\t\t\tsavedFoods={this.state.userFavouritesFilt}\n\t\t\t\t\t\t\t\tupdateFilterString={this.updateFilterString}\n\t\t\t\t\t\t\t\tremoveItem={this.removeItem}\n\t\t\t\t\t\t\t\tresetFilter={this.resetFilter}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route\n\t\t\t\t\t\tpath=\"/compare\"\n\t\t\t\t\t\trender={() => (\n\t\t\t\t\t\t\t<Compare\n\t\t\t\t\t\t\t\tuserCompared={this.state.userCompared}\n\t\t\t\t\t\t\t\tremoveItem={this.removeItem}\n\t\t\t\t\t\t\t\tresetFilter={this.resetFilter}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route\n\t\t\t\t\t\texact\n\t\t\t\t\t\tpath=\"/food/:type/:id\"\n\t\t\t\t\t\trender={props => (\n\t\t\t\t\t\t\t<FoodDetail\n\t\t\t\t\t\t\t\tid={props.match.params.id}\n\t\t\t\t\t\t\t\ttype={props.match.params.type}\n\t\t\t\t\t\t\t\tgetDetails={this.getDetails}\n\t\t\t\t\t\t\t\tcompleteFoodNutrients={this.completeFoodNutrients}\n\t\t\t\t\t\t\t\tcompleteFood={this.completeFood}\n\t\t\t\t\t\t\t\taddToSaved={this.addToSaved}\n\t\t\t\t\t\t\t\tresetFilter={this.resetFilter}\n\t\t\t\t\t\t\t></FoodDetail>\n\t\t\t\t\t\t)}\n\t\t\t\t\t/>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\tthis.state.toaster.hidden\n\t\t\t\t\t\t\t\t? 'toasterContainer hide'\n\t\t\t\t\t\t\t\t: 'toasterContainer show'\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Toaster\n\t\t\t\t\t\t\toverall={this.state.toaster.overall}\n\t\t\t\t\t\t\tmessage={this.state.toaster.message}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Router>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.register();\nserviceWorker.unregister();\n"],"sourceRoot":""}