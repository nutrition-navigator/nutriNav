{"version":3,"sources":["assets/nutriNavLogo.svg","components/Nav.js","components/FavouriteCard.js","components/FavouriteResults.js","pages/Favourites.js","pages/FoodDetail.js","components/ComparisonCard.js","pages/Compare.js","components/FoodCard.js","components/FoodResults.js","pages/Home.js","components/Toaster.js","firebaseConfig.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Nav","className","title","aria-label","activeClassName","to","exact","onClick","this","props","resetFilter","icon","faHome","faHeart","src","logo","alt","faSearch","faExchangeAlt","Component","FavouriteCard","id","foodItem","encodeURI","type","brand","imgURL","name","removeItem","key","faTimes","FavouriteResults","foodItems","map","index","Favourites","state","term","htmlFor","placeholder","onKeyUp","e","updateFilterString","target","value","savedFoods","FoodDetail","removeFocus","blur","food","foodType","isReady","getDetails","then","response","foodDetail","data","foods","completedNutrients","completeFoodNutrients","completedFood","completeFood","setState","serving","servingUnit","servingWeight","addToSaved","parentNode","secondaryNutrients","other","unit","mainNutrients","nutrient","faSpinner","ComparisonCard","secondNutrient","Compare","userCompared","FoodCard","nix_item_id","food_name","photo","thumb","brand_name","FoodResults","typeCheck","hasUserTyped","length","Home","onChange","userSearch","foodTypeButtonClick","Toaster","theme","SUCCESS","overall","message","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","creds","App","getAllSaved","database","ref","on","savedFromDB","val","arraySaved","push","completeSaved","runToaster","duration","toaster","hidden","killToaster","setTimeout","max","maxCompared","maxFavourites","isNotDuplicate","userFavourites","filter","child","remove","getNutrients","nutrientsAPI","axios","url","method","responseType","headers","tempNutrients","targetNutrients","getNutrientID","nutrients","tempNutrient","usda_nutr_desc","includes","attr_id","getValue","foodNutrients","othersToArray","others","otherNutrients","highres","Math","round","serving_qty","serving_unit","serving_weight_grams","Calories","nf_calories","Carbs","nf_total_carbohydrate","Sodium","nf_sodium","Sugar","nf_sugars","Protein","nf_protein","Fat","nf_total_fat","nf_saturated_fat","Fiber","nf_dietary_fiber","secondary","full_nutrients","urlEndpoint","params","query","fetchFood","res","brandedFood","branded","commonFood","common","randomSearch","randomArray","randomInteger","floor","random","string","filteredData","toLowerCase","userFavouritesFilt","filterString","basename","path","render","match","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.fcece330.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/nutriNavLogo.ba2638de.svg\";","import React, { Component } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n\tfaExchangeAlt,\r\n\tfaHome,\r\n\tfaHeart,\r\n\tfaSearch\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport logo from '../assets/nutriNavLogo.svg';\r\n\r\nclass Nav extends Component {\r\n\trender() {\r\n\t\treturn (\r\n      <div className=\"navigation\">\r\n        <div className=\"wrapper\">\r\n          <nav>\r\n            <ul className=\"navContainer\">\r\n              <div className=\"navList\">\r\n                <li\r\n                  className=\"navItem\"\r\n                  title=\"Go to Homepage\"\r\n                  aria-label=\"Go to Homepage\"\r\n                >\r\n                  <NavLink\r\n                    activeClassName=\"activeNav\"\r\n                    to=\"/\"\r\n                    exact\r\n                    onClick={this.props.resetFilter}\r\n                  >\r\n                    <FontAwesomeIcon icon={faHome} />\r\n                  </NavLink>\r\n                </li>\r\n                <li\r\n                  className=\"navItem\"\r\n                  title=\"Go to Favourited Items Page\"\r\n                  aria-label=\"Go to Favourited Items Page\"\r\n                >\r\n                  <NavLink\r\n                    activeClassName=\"activeNav\"\r\n                    to=\"/favourites\"\r\n                    onClick={this.props.resetFilter}\r\n                  >\r\n                    <FontAwesomeIcon icon={faHeart} />\r\n                  </NavLink>\r\n                </li>\r\n              </div>\r\n              <div className=\"navList\">\r\n                <li\r\n                  className=\"navLogo\"\r\n                  title=\"Go to Homepage\"\r\n                  aria-label=\"Go to Homepage\"\r\n                >\r\n                  <NavLink\r\n                    activeClassName=\"activeNav\"\r\n                    to=\"/\"\r\n                    exact\r\n                    onClick={this.props.resetFilter}\r\n                  >\r\n                    <img src={logo} alt=\"\" />\r\n                  </NavLink>\r\n                </li>\r\n              </div>\r\n\r\n              <div className=\"navList\">\r\n                <li\r\n                  className=\"nav-icon navItem\"\r\n                  title=\"Go to Search Page\"\r\n                  aria-label=\"Go to Search Page\"\r\n                >\r\n                  <NavLink\r\n                    activeClassName=\"activeNav\"\r\n                    to=\"/\"\r\n                    exact\r\n                    onClick={this.props.resetFilter}\r\n                  >\r\n                    <FontAwesomeIcon icon={faSearch} />\r\n                  </NavLink>\r\n                </li>\r\n                <li\r\n                  className=\"nav-icon navItem\"\r\n                  title=\"Go to Food Comparing Page\"\r\n                  aria-label=\"Go to Food Comparing Page\"\r\n                >\r\n                  <NavLink\r\n                    activeClassName=\"activeNav\"\r\n                    to=\"/compare\"\r\n                    onClick={this.props.resetFilter}\r\n                  >\r\n                    {\" \"}\r\n                    <FontAwesomeIcon icon={faExchangeAlt} />\r\n                  </NavLink>\r\n                </li>\r\n              </div>\r\n            </ul>\r\n          </nav>\r\n        </div>\r\n      </div>\r\n    );\r\n\t}\r\n}\r\n\r\nexport default Nav;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n  faTimes\r\n} from '@fortawesome/free-solid-svg-icons';\r\n\r\nclass FavouriteCard extends Component {\r\n  render() {\r\n    let id = this.props.foodItem.id\r\n    id=encodeURI(id)\r\n    const type = this.props.foodItem.brand ? \"branded\" : \"common\";\r\n    return (\r\n      <div className=\"foodCard favourite\">\r\n          \r\n          <Link className=\"favouriteCardLink\" to={`/food/${type}/${id}`}>\r\n            <div className=\"favCard\">\r\n\r\n              <div className=\"cardImage\">\r\n                <img src={this.props.foodItem.imgURL} alt={this.props.foodItem.name} />\r\n              </div>\r\n\r\n              <div className=\"cardContent\">\r\n                <h2 className=\"cardTitle\">{this.props.foodItem.brand ? this.props.foodItem.brand : this.props.foodItem.name}</h2>\r\n                {this.props.foodItem.brand ? <h3 className=\"cardSubtitle\">{this.props.foodItem.name}</h3> : null}\r\n                \r\n              </div>\r\n            </div>\r\n          </Link>\r\n        <button\r\n          title=\"Click to Remove\"\r\n          aria-label=\"Click to Remove from Favourites\"\r\n          onClick={() => {\r\n            this.props.removeItem(this.props.foodItem.key, \"userFavourites\");\r\n          }}\r\n        >\r\n          <FontAwesomeIcon className=\"deleteIcon\" icon={faTimes} />\r\n        </button >\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FavouriteCard;\r\n","import React, { Component } from \"react\";\r\nimport FavouriteCard from \"./FavouriteCard\";\r\n\r\nclass FavouriteResults extends Component {\r\n  componentDidMount() {}\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"foodContainer\">\r\n        {this.props.foodItems.map((foodItem, index) => (\r\n          <FavouriteCard removeItem={this.props.removeItem} key={index} foodItem={foodItem} />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FavouriteResults;\r\n","import React, { Component } from \"react\";\r\nimport Nav from \"../components/Nav\";\r\nimport FavouriteResults from \"../components/FavouriteResults\";\r\n\r\nclass Favourites extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      term: \"\"\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"favourites\">\r\n        <Nav resetFilter={this.props.resetFilter}/>\r\n        <div className=\"pageContainer\">\r\n          <div className=\"wrapper\">\r\n            <h1 className=\"pageTitle\">Saved Items</h1>\r\n            <div className=\"pageFilter\">\r\n              <label htmlFor=\"filter\"></label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"filter\"\r\n                placeholder=\"Filter by Name\"\r\n                onKeyUp={(e) => {\r\n                  this.props.updateFilterString(e.target.value);\r\n                }}\r\n              ></input>\r\n            </div>\r\n            <FavouriteResults\r\n              foodItems={this.props.savedFoods}\r\n              removeItem={this.props.removeItem}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Favourites;\r\n","import React, { Component } from 'react';\r\nimport { faExchangeAlt, faHeart, faSpinner } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport Nav from '../components/Nav';\r\n\r\nclass FoodDetail extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tfood: {},\r\n\t\t\tfoodType: this.props.type,\r\n\t\t\tisReady: false\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.props.getDetails(this.props.id, this.props.type).then(response => {\r\n\t\t\tconst foodDetail = response.data.foods[0];\r\n\t\t\tconst completedNutrients = this.props.completeFoodNutrients(foodDetail);\r\n\t\t\tconst completedFood = this.props.completeFood(\r\n\t\t\t\tfoodDetail,\r\n\t\t\t\tcompletedNutrients\r\n\t\t\t);\r\n\t\t\tthis.setState(\r\n\t\t\t\t{\r\n\t\t\t\t\tfood: completedFood\r\n\t\t\t\t},\r\n\t\t\t\t() => {\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tisReady: true\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t}); // end of .then()\r\n\t}\r\n\r\n\tremoveFocus = e => {\r\n\t\te.target.blur();\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn this.state.isReady ? (\r\n      <div className=\"detailPage\">\r\n        <Nav resetFilter={this.props.resetFilter} />\r\n\r\n        <div className=\"detailContainer\">\r\n          <div className=\"wrapper\">\r\n            <div className=\"detailContent\">\r\n              <div className=\"detailIntro\">\r\n                <div className=\"introLeft\">\r\n                  <div className=\"detailImg\">\r\n                    <img\r\n                      src={this.state.food.imgURL}\r\n                      alt={this.state.food.name}\r\n                    ></img>\r\n                  </div>\r\n                  <div className=\"detailDesc\">\r\n                    <div className=\"detailTitle\">\r\n                      <h1> {this.state.food.name}</h1>\r\n                    </div>\r\n\r\n                    <div className=\"detailDescription\">\r\n                      <h2>Description</h2>\r\n                      <ul>\r\n                        <li>\r\n                          <p>\r\n                            <span className=\"nutrientName\">Serving:</span>{\" \"}\r\n                            {this.state.food.serving}{\" \"}\r\n                            {this.state.food.servingUnit} (\r\n                            {this.state.food.servingWeight}\r\n                            g){\" \"}\r\n                          </p>\r\n                        </li>\r\n\r\n                        {this.state.food.brand ? (\r\n                          <li>\r\n                            <p>Brand: {this.state.food.brand}</p>\r\n                          </li>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </ul>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"introRight\">\r\n                  <div className=\"detailButtons\">\r\n                    <button\r\n                      title=\"Add to Favourites\"\r\n\t\t\t\t\t\t\t\t\t\t\taria-label=\"Add to Favourites\"\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={(e) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tthis.props.addToSaved(this.state.food,'userFavourites');\r\n\t\t\t\t\t\t\t\t\t\t\t\te.target.parentNode.blur()\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n                    >\r\n                      <FontAwesomeIcon\r\n                        icon={faHeart}\r\n                      />\r\n                    </button>\r\n                    <button\r\n                      title=\"Add to Compare\"\r\n\t\t\t\t\t\t\t\t\t\t\taria-label=\"Add to Compare\"\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={(e) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tthis.props.addToSaved(this.state.food, 'userCompared');\r\n\t\t\t\t\t\t\t\t\t\t\t\te.target.parentNode.blur()\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n                    >\r\n                      <FontAwesomeIcon\r\n                        icon={faExchangeAlt}\r\n                      />\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"detailNutrition\">\r\n                <h2>Nutritional Facts</h2>\r\n                <div className=\"detailNutritionFacts\">\r\n                  <ul className=\"nutrientList\">\r\n                    {this.state.food.secondaryNutrients.map(other => {\r\n                      return (\r\n                        <li key={other.name}>\r\n                          <div className=\"nutrient\">\r\n                            <div className=\"nutrientName\">\r\n                              <p>{other.name}</p>\r\n                            </div>\r\n                            <div className=\"nutrientUnit\">\r\n                              <p>\r\n                                {other.value} {other.unit}\r\n                              </p>\r\n                            </div>\r\n                          </div>\r\n                        </li>\r\n                      );\r\n                    })}\r\n                  </ul>\r\n\r\n                  <ul className=\"nutrientList\">\r\n                    {this.state.food.mainNutrients.map(nutrient => {\r\n                      return (\r\n                        <li key={nutrient.name}>\r\n                          <div className=\"nutrient\">\r\n                            <div className=\"nutrientName\">\r\n                              <p>{nutrient.name}</p>\r\n                            </div>\r\n                            <div className=\"nutrientUnit\">\r\n                              <p>\r\n                                {nutrient.value} {nutrient.unit}\r\n                              </p>\r\n                            </div>\r\n                          </div>\r\n                        </li>\r\n                      );\r\n                    })}\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    ) : (\r\n      <div className=\"detailPage\">\r\n        <Nav />\r\n        <div className=\"detailContainer\">\r\n          <div className=\"wrapper\">\r\n            <div className=\"spinner\">\r\n              <FontAwesomeIcon icon={faSpinner} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n\t}\r\n}\r\nexport default FoodDetail;\r\n","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n\tfaTimes\r\n} from '@fortawesome/free-solid-svg-icons';\r\n\r\nfunction ComparisonCard(props) {\r\n\treturn (\r\n\t\t<div className=\"comparisonCard\">\r\n\t\t\t<div className=\"imageContainer\">\r\n\t\t\t\t<img src={props.food.imgURL} alt={props.food.name} />\r\n\t\t\t</div>\r\n\t\t\t<h3>{props.food.name}</h3>\r\n\t\t\t<h4>Nutritional Facts</h4>\r\n\t\t\t<ul>\r\n\t\t\t\t{props.food.secondaryNutrients.map(secondNutrient => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<li key={secondNutrient.name}>\r\n\t\t\t\t\t\t\t<div className=\"nutrient\">\r\n\t\t\t\t\t\t\t\t<div className=\"nutrientName\">{secondNutrient.name}</div>\r\n\t\t\t\t\t\t\t\t<div className=\"nutrientUnit\">\r\n\t\t\t\t\t\t\t\t\t{secondNutrient.value} {secondNutrient.unit}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</ul>\r\n\r\n\t\t\t<h4>Vitamins and Minerals</h4>\r\n\t\t\t<ul>\r\n\t\t\t\t{props.food.mainNutrients.map(nutrient => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<li key={nutrient.id}>\r\n\t\t\t\t\t\t\t<div className=\"nutrient\">\r\n\t\t\t\t\t\t\t\t<div className=\"nutrientName\">{nutrient.name}</div>\r\n\t\t\t\t\t\t\t\t<div className=\"nutrientUnit\">\r\n\t\t\t\t\t\t\t\t\t{nutrient.value} {nutrient.unit}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</ul>\r\n\t\t\t<button\r\n\t\t\t\ttitle=\"Click to remove\"\r\n\t\t\t\taria-label=\"Click to remove from Item Comparison\"\r\n\t\t\t\tonClick={() => {\r\n\t\t\t\t\tprops.removeItem(props.id, 'userCompared');\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<FontAwesomeIcon className=\"deleteIcon\" icon={faTimes} />\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default ComparisonCard;\r\n","import React, { Component } from 'react';\r\nimport Nav from '../components/Nav';\r\nimport ComparisonCard from '../components/ComparisonCard';\r\n\r\nclass Compare extends Component {\r\n\r\n\trender() {\r\n\t\treturn (\r\n      <div className=\"comparisonPage\">\r\n        <Nav resetFilter={this.props.resetFilter} />\r\n        <h1 className=\"pageTitle\">Compare Items</h1>\r\n        <div className=\"wrapper\">\r\n          <div className=\"comparisonContainer\">\r\n            {this.props.userCompared.map(food => {\r\n              return (\r\n                <ComparisonCard\r\n                  key={food.key}\r\n                  id={food.key}\r\n                  food={food}\r\n                  removeItem={this.props.removeItem}\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n\t}\r\n}\r\n\r\nexport default Compare;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass FoodCard extends Component {\r\n\trender() {\r\n\t\tlet id = this.props.foodItem.nix_item_id\r\n\t\t\t? this.props.foodItem.nix_item_id\r\n\t\t\t: this.props.foodItem.food_name;\r\n\t\tid = encodeURI(id);\r\n\t\tconst type = this.props.foodItem.nix_item_id\r\n\t\t\t? \"branded\" : \"common\"\r\n\r\n\t\treturn (\r\n\t\t\t\r\n\t\t\t<Link className=\"foodCardLink\" to={`/food/${type}/${id}`}>\r\n\t\t\t\t<div className=\"foodCard\" title=\"Click for details\">\r\n\t\t\t\t\t<div className=\"cardImage\">\r\n\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\tsrc={this.props.foodItem.photo.thumb}\r\n\t\t\t\t\t\t\talt={this.props.foodItem.food_name}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"cardContent\">\r\n\t\t\t\t\t\t<h2 className=\"cardTitle\">\r\n\t\t\t\t\t\t\t{this.props.foodItem.nix_item_id\r\n\t\t\t\t\t\t\t\t? this.props.foodItem.brand_name\r\n\t\t\t\t\t\t\t\t: this.props.foodItem.food_name}\r\n\t\t\t\t\t\t</h2>\r\n\t\t\t\t\t\t{this.props.foodItem.nix_item_id ? (\r\n\t\t\t\t\t\t\t<h3 className=\"cardSubtitle\">{this.props.foodItem.food_name}</h3>\r\n\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</Link>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default FoodCard;\r\n","import React, { Component } from 'react';\r\nimport FoodCard from './FoodCard';\r\n\r\nclass FoodResults extends Component {\r\n\tcomponentDidMount() {}\r\n\r\n\ttypeCheck = () => {\r\n\t\tif (this.props.hasUserTyped === false && this.props.foodItems.length === 0) {\r\n\t\t\treturn false\r\n\t\t} else if (this.props.hasUserTyped === true && this.props.foodItems.length===0) {\r\n\t\t\treturn true\r\n\t\t} else {\r\n\t\t\treturn false\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"foodContainer\">\r\n\t\t\t\t{this.typeCheck() ? (\r\n\t\t\t\t\t<div className=\"noResults\">\r\n\t\t\t\t\t\t<img src=\"https://i.imgur.com/S81lkaK.png\" alt=\"\" />\r\n\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\tSorry! We didn't find anything. Please try another search term.\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t) : (\r\n\t\t\t\t\tthis.props.foodItems.map((foodItem, index) => (\r\n\t\t\t\t\t\t<FoodCard key={index} foodItem={foodItem} />\r\n\t\t\t\t\t))\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default FoodResults;\r\n","import React, { Component } from 'react';\r\nimport Nav from '../components/Nav';\r\nimport FoodResults from '../components/FoodResults';\r\n\r\nclass Home extends Component {\r\n\trender() {\r\n\t\treturn (\r\n      <div className=\"home\">\r\n        <Nav resetFilter={this.props.resetFilter} />\r\n        <div className=\"pageContainer\">\r\n          <div className=\"wrapper\">\r\n            <div className=\"searchBar\">\r\n              <div className=\"input\">\r\n                <input\r\n                  type=\"search\"\r\n                  name=\"search\"\r\n                  id=\"search\"\r\n                  onChange={this.props.userSearch}\r\n                  placeholder=\"Search for Food\"\r\n                />\r\n              </div>\r\n\r\n              <div className=\"toggleBtns\">\r\n                <button\r\n                  className={\r\n                    this.props.type === \"common\"\r\n                      ? \"toggle toggleCommon toggleActive\"\r\n                      : \"toggle toggleCommon\"\r\n                  }\r\n                  id=\"common\"\r\n                  onClick={this.props.foodTypeButtonClick}\r\n                >\r\n                  Common\r\n                </button>\r\n                <button\r\n                  className={\r\n                    this.props.type === \"branded\"\r\n                      ? \"toggle toggleBranded toggleActive\"\r\n                      : \"toggle toggleBranded\"\r\n                  }\r\n                  id=\"branded\"\r\n                  onClick={this.props.foodTypeButtonClick}\r\n                >\r\n                  Branded\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            <FoodResults foodItems={this.props.foodItems} hasUserTyped={this.props.hasUserTyped}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from 'react';\r\n\r\nclass Toaster extends Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\ttheme: {\r\n\t\t\t\tSUCCESS: 'success',\r\n\t\t\t\t'SAVE FAILED': 'failed'\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\r\n  render() {\r\n    const theme = this.state.theme[this.props.overall];\r\n    return (\r\n      <div className={\"toasterBox \"}>\r\n        <div className={\"toaster \" + theme}>\r\n          <h1>{this.props.overall}</h1>\r\n          <p> {this.props.message}</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Toaster;\r\n","import firebase from 'firebase';\r\n\r\n\r\n var firebaseConfig = {\r\n   apiKey: \"AIzaSyCdy_v8Of--vsc5yPhbKDECOOHl3nlHIfo\",\r\n   authDomain: \"nutrinav-97224.firebaseapp.com\",\r\n   databaseURL: \"https://nutrinav-97224.firebaseio.com\",\r\n   projectId: \"nutrinav-97224\",\r\n   storageBucket: \"nutrinav-97224.appspot.com\",\r\n   messagingSenderId: \"37824965367\",\r\n   appId: \"1:37824965367:web:9c87ff57c94915ec9c01f2\"\r\n };\r\n\r\n firebase.initializeApp(firebaseConfig);\r\n\r\n export default firebase;","import React, { Component } from \"react\";\r\nimport { HashRouter as Router, Route } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Favourites from \"./pages/Favourites\";\r\nimport FoodDetail from \"./pages/FoodDetail\";\r\nimport Compare from \"./pages/Compare\";\r\nimport Home from \"./pages/Home\";\r\nimport Toaster from \"./components/Toaster\";\r\nimport firebase from \"./firebaseConfig\";\r\nimport \"./App.css\";\r\n// import creds from \"./apiKey\";\r\n\r\nconst creds = {\r\n  key: \"b41ff95cf26bdcca769374b7487a2397\",\r\n  id: \"f55663ad\"\r\n};\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      // target nutrients from the Client Brief (initially without ids)\r\n      targetNutrients: [\r\n        { name: \"Vitamin A\", unit: \"IU\" },\r\n        { name: \"Vitamin D\", unit: \"IU\" },\r\n        { name: \"Vitamin B-6\", unit: \"mg\" },\r\n        { name: \"Vitamin C\", unit: \"mg\" },\r\n        { name: \"Vitamin E\", unit: \"mg\" },\r\n        { name: \"Magnesium\", unit: \"mg\" },\r\n        { name: \"Zinc\", unit: \"mg\" },\r\n        { name: \"Iron\", unit: \"mg\" }\r\n      ],\r\n      commonFood: [],\r\n      brandedFood: [],\r\n      nutrients: [], // target nutrients with ids\r\n      userFavourites: [],\r\n      userFavouritesFilt: [],\r\n      filterString: \"\",\r\n      userCompared: [],\r\n      type: \"common\",\r\n      maxCompared: 3,\r\n      maxFavourites: 18,\r\n      toaster: {\r\n        hidden: true\r\n\t\t\t},\r\n\t\t\thasUserTyped:false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getNutrients(); // get nutrients from API in raw state\r\n    this.randomSearch();\r\n    this.getAllSaved(\"userCompared\");\r\n    this.getAllSaved(\"userFavourites\");\r\n  }\r\n\r\n  // listens for changes to firebase and updates state\r\n  getAllSaved = state => {\r\n    const dbRef = firebase.database().ref(`${state}`);\r\n    dbRef.on(\"value\", response => {\r\n      const savedFromDB = response.val();\r\n      const arraySaved = [];\r\n      for (let key in savedFromDB) {\r\n        arraySaved.push({\r\n          key: key,\r\n          id: savedFromDB[key].id,\r\n          name: savedFromDB[key].name,\r\n          brand: savedFromDB[key].brand,\r\n          serving: savedFromDB[key].serving,\r\n          servingUnit: savedFromDB[key].servingUnit,\r\n          servingWeight: savedFromDB[key].servingWeight,\r\n          imgURL: savedFromDB[key].imgURL,\r\n          mainNutrients: savedFromDB[key].mainNutrients,\r\n          secondaryNutrients: savedFromDB[key].secondaryNutrients\r\n        });\r\n      }\r\n      this.completeSaved(arraySaved, state);\r\n    });\r\n  };\r\n  // saves the incoming firebase data to state\r\n  completeSaved = (data, state) => {\r\n    this.setState(\r\n      {\r\n        [state]: data,\r\n        [state + `Filt`]: data\r\n      });\r\n  };\r\n\r\n  // adds a toaster to the UI\r\n  runToaster = ({ overall, message, duration }) => {\r\n    this.setState(\r\n      {\r\n        toaster: {\r\n          hidden: false,\r\n          message: message,\r\n          overall: overall\r\n        }\r\n      },\r\n      () => this.killToaster(duration)\r\n    );\r\n  };\r\n\r\n  // removes the toaster from the UI\r\n  killToaster = duration => {\r\n    setTimeout(() => {\r\n      this.setState({\r\n        toaster: {\r\n          hidden: true\r\n        }\r\n      });\r\n    }, duration);\r\n  };\r\n\r\n  // adds a food item to saved (checks for duplicates and against max amounts)\r\n  addToSaved = (food, state) => {\r\n    const max =\r\n      state === \"userCompared\"\r\n        ? this.state.maxCompared\r\n        : this.state.maxFavourites;\r\n    if (this.isNotDuplicate(food.id, state) && this.state[state].length < max) {\r\n      const dBCompRef = firebase.database().ref(`${state}`);\r\n      dBCompRef.push(food);\r\n      this.runToaster({\r\n        overall: `SUCCESS`,\r\n        message: `Your food (${food.name}) has been saved.`,\r\n        duration: 2500\r\n      });\r\n    } else {\r\n      this.isNotDuplicate(food.id, state)\r\n        ? this.runToaster({\r\n            overall: `SAVE FAILED`,\r\n            message: `Unable to add. The list is full`,\r\n            duration: 2500\r\n          })\r\n        : this.runToaster({\r\n            overall: `SAVE FAILED`,\r\n            message: `This food (${food.name}) is already saved.`,\r\n            duration: 2500\r\n          });\r\n    }\r\n  };\r\n\r\n  // checks if food item already exists in saved\r\n  isNotDuplicate = (id, state) => {\r\n    const copySaved =\r\n      state === \"userCompared\"\r\n        ? [...this.state.userCompared]\r\n        : [...this.state.userFavourites];\r\n\r\n    const result = copySaved.filter(food => {\r\n      return food.id === id;\r\n    });\r\n    return result.length === 0;\r\n  };\r\n\r\n  // removes a food item from saved\r\n  removeItem = (key, state) => {\r\n    const dbRef = firebase.database().ref(state);\r\n    dbRef.child(key).remove();\r\n    this.runToaster({\r\n      overall: `SUCCESS`,\r\n      message: `The food item has been removed.`,\r\n      duration: 2500\r\n    });\r\n  };\r\n\r\n  // retrieves the most up to date nutrients from API and their ids, maps the ids to the target nutrient list\r\n  getNutrients = () => {\r\n    let nutrientsAPI = [];\r\n    axios({\r\n      url: \"https://trackapi.nutritionix.com/v2/utils/nutrients\",\r\n      method: \"GET\",\r\n      responseType: \"json\",\r\n      headers: {\r\n        \"x-app-key\": creds.key,\r\n        \"x-app-id\": creds.id,\r\n        \"x-remote-user-id\": \"0\"\r\n      }\r\n    }).then(response => {\r\n      nutrientsAPI = response.data;\r\n      // transforms each target nutrient into an object which includes the nutrient's id\r\n      // stores these objects in a temporary array\r\n      const tempNutrients = this.state.targetNutrients.map(nutrient => {\r\n        return {\r\n          name: nutrient.name,\r\n          id: this.getNutrientID(nutrient.name, nutrientsAPI),\r\n          unit: nutrient.unit\r\n        };\r\n      });\r\n      // updates the nutrients state with the temporary array\r\n      this.setState({\r\n        nutrients: tempNutrients\r\n      });\r\n    });\r\n  };\r\n\r\n  // retrieves the id of a nutrient from a given nutrient list, using the name\r\n  getNutrientID = (name, nutrientsAPI) => {\r\n    const tempNutrient = nutrientsAPI.filter(nutrient => {\r\n      return nutrient.usda_nutr_desc.includes(name);\r\n    });\r\n    return tempNutrient.length > 0 ? tempNutrient[0].attr_id : \"\";\r\n  };\r\n\r\n  // retrieves the amount/value of a nutrient from a given nutrient list, using the id\r\n  getValue = (id, foodNutrients) => {\r\n    const tempNutrient = foodNutrients.filter(nutrient => {\r\n      return nutrient.attr_id === id;\r\n    });\r\n    return tempNutrient.length > 0 ? tempNutrient[0].value : 0;\r\n  };\r\n\r\n  othersToArray = others => {\r\n    const otherNutrients = [];\r\n    for (let key in others) {\r\n      otherNutrients.push({\r\n        name: key,\r\n        value: others[key].value,\r\n        unit: others[key].unit\r\n      });\r\n    }\r\n    return otherNutrients;\r\n  };\r\n\r\n  completeFood = (food, nutrients) => {\r\n    const completedFood = {\r\n      id: food.nix_item_id ? food.nix_item_id : food.food_name,\r\n      name: food.food_name,\r\n      brand: food.brand_name,\r\n      imgURL: food.photo.highres ? food.photo.highres : food.photo.thumb,\r\n      serving: Math.round(food.serving_qty),\r\n      servingUnit: food.serving_unit,\r\n      servingWeight: food.serving_weight_grams,\r\n      mainNutrients: [...nutrients],\r\n      // other non-critical nutrients mentioned in the Client Brief\r\n      secondaryNutrients: {\r\n        Calories: { value: Math.round(food.nf_calories), unit: \"kcal\" },\r\n        Carbs: {\r\n          value: Math.round(food.nf_total_carbohydrate),\r\n          unit: \"g\"\r\n        },\r\n        Sodium: { value: Math.round(food.nf_sodium), unit: \"mg\" },\r\n        Sugar: { value: Math.round(food.nf_sugars), unit: \"g\" },\r\n        Protein: { value: Math.round(food.nf_protein), unit: \"g\" },\r\n        Fat: { value: Math.round(food.nf_total_fat), unit: \"g\" },\r\n        \"Saturated Fat\": {\r\n          value: Math.round(food.nf_saturated_fat),\r\n          unit: \"g\"\r\n        },\r\n        Fiber: {\r\n          value: Math.round(food.nf_dietary_fiber),\r\n          unit: \"g\"\r\n        }\r\n      }\r\n    };\r\n    const secondary = completedFood.secondaryNutrients;\r\n    completedFood.secondaryNutrients = this.othersToArray(secondary);\r\n    return completedFood;\r\n  };\r\n\r\n  // receives a food item and returns its completed main nutrient list with name, value, id, and measure unit\r\n  completeFoodNutrients = food => {\r\n    const completeNutrients = this.state.nutrients.map(nutrient => {\r\n      // calls a function from props that maps this nutrient to its value\r\n      const value = this.getValue(nutrient.id, food.full_nutrients);\r\n      // returns the completed nutrient profile as an object to exist in the completedNutrients array\r\n      return {\r\n        name: nutrient.name,\r\n        id: nutrient.id,\r\n        value: Math.round(value),\r\n        unit: nutrient.unit\r\n      };\r\n    });\r\n    return completeNutrients;\r\n  };\r\n\r\n  // gets the details about a food item from the API based on the id(nix or food_name) and type(common vs branded)\r\n  // caller must resolve the promise on their own\r\n  getDetails = (id, type) => {\r\n    const urlEndpoint = type === \"common\" ? \"natural/nutrients\" : \"search/item\";\r\n    const method = type === \"common\" ? \"POST\" : \"GET\";\r\n    const params = type === \"common\" ? {} : { nix_item_id: id };\r\n    const data = type === \"common\" ? { query: id } : {};\r\n    return axios({\r\n      url: `https://trackapi.nutritionix.com/v2/${urlEndpoint}`,\r\n      method: method,\r\n      headers: {\r\n        \"x-app-key\": creds.key,\r\n        \"x-app-id\": creds.id,\r\n        \"x-remote-user-id\": \"0\",\r\n        \"content-type\": \"application/json\"\r\n      },\r\n      data: data,\r\n      params: params\r\n    });\r\n  };\r\n\r\n  fetchFood = query => {\r\n    axios({\r\n      url: \"https://trackapi.nutritionix.com/v2/search/instant\",\r\n      method: \"get\",\r\n      headers: {\r\n        \"x-app-key\": creds.key,\r\n        \"x-app-id\": creds.id\r\n      },\r\n      params: {\r\n        query\r\n      }\r\n    }).then(res => {\r\n      this.setState({\r\n        brandedFood: res.data.branded,\r\n        commonFood: res.data.common,\r\n        hasUserTyped: true,\r\n      });\r\n    });\r\n  };\r\n\r\n\t// Function to random decide some initial search results on page load\r\n\trandomSearch = () => {\r\n\t\tconst randomArray = ['corn', 'spinach', 'burger', 'broccoli'];\r\n\t\tconst randomInteger = Math.floor(Math.random() * randomArray.length);\r\n\t\tthis.fetchFood(randomArray[randomInteger]);\r\n\t};\r\n\r\n\t// Function that tracks which letters the user is typing into the search bar\r\n\tuserSearch = e => {\r\n\t\tconst query = e.target.value;\r\n    this.fetchFood(query);\r\n\t};\r\n\r\n  // Function to switch between displaying either commmon foods or branded foods to the user.\r\n  foodTypeButtonClick = e => {\r\n    this.setState({\r\n      type: e.target.id\r\n    });\r\n  };\r\n\r\n  // filters favourites by received keyword\r\n  updateFilterString = string => {\r\n    const filteredData = this.state.userFavourites.filter(food => {\r\n      return food.name.toLowerCase().includes(string.toLowerCase());\r\n    });\r\n    this.setState({\r\n      userFavouritesFilt: filteredData\r\n    });\r\n\t};\r\n\t\r\n\t// brings the saved favourites into an unfiltered state\r\n\tresetFilter = () => {\r\n\t\tthis.setState({\r\n\t\t\tfilterString: '',\r\n\t\t\tuserFavouritesFilt: this.state.userFavourites,\r\n\t\t})\r\n\t}\r\n\r\n  render() {\r\n    return (\r\n      <Router basename=\"/\">\r\n        <div className=\"App\">\r\n          <Route\r\n            path=\"/\"\r\n            exact\r\n            render={() => (\r\n              <Home\r\n                foodItems={\r\n                  this.state.type === \"branded\"\r\n                    ? this.state.brandedFood\r\n                    : this.state.commonFood\r\n                }\r\n                userSearch={this.userSearch}\r\n                foodTypeButtonClick={this.foodTypeButtonClick}\r\n\t\t\t\t\t\t\t\ttype={this.state.type}\r\n\t\t\t\t\t\t\t\tresetFilter={this.resetFilter}\r\n\t\t\t\t\t\t\t\thasUserTyped={this.state.hasUserTyped}\r\n              />\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/favourites\"\r\n            render={() => (\r\n              <Favourites\r\n                savedFoods={this.state.userFavouritesFilt}\r\n                updateFilterString={this.updateFilterString}\r\n\t\t\t\t\t\t\t\tremoveItem={this.removeItem}\r\n\t\t\t\t\t\t\t\tresetFilter={this.resetFilter}\r\n              />\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/compare\"\r\n            render={() => (\r\n              <Compare\r\n                userCompared={this.state.userCompared}\r\n\t\t\t\t\t\t\t\tremoveItem={this.removeItem}\r\n\t\t\t\t\t\t\t\tresetFilter={this.resetFilter}\r\n              />\r\n            )}\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/food/:type/:id\"\r\n            render={props => (\r\n              <FoodDetail\r\n                id={props.match.params.id}\r\n                type={props.match.params.type}\r\n                getDetails={this.getDetails}\r\n                completeFoodNutrients={this.completeFoodNutrients}\r\n                completeFood={this.completeFood}\r\n\t\t\t\t\t\t\t\taddToSaved={this.addToSaved}\r\n\t\t\t\t\t\t\t\tresetFilter={this.resetFilter}\r\n              ></FoodDetail>\r\n            )}\r\n          />\r\n          <div\r\n            className={\r\n              this.state.toaster.hidden\r\n                ? \"toasterContainer hide\"\r\n                : \"toasterContainer show\"\r\n            }\r\n          >\r\n            <Toaster\r\n              overall={this.state.toaster.overall}\r\n              message={this.state.toaster.message}\r\n            />\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n// serviceWorker.register();\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}